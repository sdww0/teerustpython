diff --git a/src/bytes_mut.rs b/src/bytes_mut.rs
index dc4e4b1..d8ccdf2 100644
--- a/src/bytes_mut.rs
+++ b/src/bytes_mut.rs
@@ -75,10 +75,10 @@ const KIND_MASK: usize = 0b1;
 
 // The max original capacity value. Any `Bytes` allocated with a greater initial
 // capacity will default to this.
-const MAX_ORIGINAL_CAPACITY_WIDTH: usize = 17;
+pub const MAX_ORIGINAL_CAPACITY_WIDTH: usize = 17;
 // The original capacity algorithm will not take effect unless the originally
 // allocated capacity was at least 1kb in size.
-const MIN_ORIGINAL_CAPACITY_WIDTH: usize = 10;
+pub const MIN_ORIGINAL_CAPACITY_WIDTH: usize = 10;
 // The original capacity is stored in powers of 2 starting at 1kb to a max of
 // 64kb. Representing it as such requires only 3 bits of storage.
 const ORIGINAL_CAPACITY_MASK: usize = 0b11100;
@@ -1227,12 +1227,12 @@ impl Shared {
     }
 }
 
-fn original_capacity_to_repr(cap: usize) -> usize {
+pub fn original_capacity_to_repr(cap: usize) -> usize {
     let width = PTR_WIDTH - ((cap >> MIN_ORIGINAL_CAPACITY_WIDTH).leading_zeros() as usize);
     cmp::min(width, MAX_ORIGINAL_CAPACITY_WIDTH - MIN_ORIGINAL_CAPACITY_WIDTH)
 }
 
-fn original_capacity_from_repr(repr: usize) -> usize {
+pub fn original_capacity_from_repr(repr: usize) -> usize {
     if repr == 0 {
         return 0;
     }
diff --git a/src/lib.rs b/src/lib.rs
index f2cb038..98bd80d 100644
--- a/src/lib.rs
+++ b/src/lib.rs
@@ -1,4 +1,4 @@
-#![deny(warnings, missing_docs, missing_debug_implementations, rust_2018_idioms)]
+#![deny(warnings, missing_debug_implementations, rust_2018_idioms)]
 #![doc(html_root_url = "https://docs.rs/bytes/0.5.4")]
 #![cfg_attr(all(target_env = "sgx", target_vendor = "mesalock"), feature(rustc_private))]
 #![no_std]
@@ -89,7 +89,7 @@ pub use crate::buf::{
     BufMut,
 };
 
-mod bytes_mut;
+pub mod bytes_mut;
 mod bytes;
 mod fmt;
 mod loom;
